{#
Defaults
#}
{% set menu_level = 0 %}
{#
Attributes
#}
{% set root_wrapper_attributes = create_attribute().addClass(pattern_configuration('menu', variant, 'root')['wrapper']) %}
{% set root_link_wrapper_attributes = create_attribute().addClass(pattern_configuration('menu', variant, 'root')['link_wrapper']) %}
{% set root_link_attributes = create_attribute().addClass(pattern_configuration('menu', variant, 'root')['link']) %}
{% set root_icon_color_attributes = create_attribute().addClass(pattern_configuration('menu', variant, 'root')['icon_color']) %}

{#
  Classes
#}
{%  set ancestors = pattern_configuration('menu', variant, 'ancestors') %}
{#
  Template
#}
{% import _self as menus %}
{% macro dropdown_menu(items, menu_level, ancestors) %}
  {% import _self as menus %}
  {# {{ ancestors_test.container.wrapper }} #}
  {% set container_classes = ([
    ancestors.container.wrapper,
    'z-' + menu_level + '0',
    menu_level == 1 ? ancestors.container.level.first : ancestors.container.level.further,
  ] | sort | join(' ') | trim ) %}
  {% set link_classes = ([
    ancestors.link.wrapper,
    menu_level == 1 ? ancestors.link.first : ancestors.link.further,
  ] | sort | join(' ') | trim ) %}
  <div class="{{ container_classes }}"
       :class="{'block lg:hidden': submenuIsOpen, 'hidden': !submenuIsOpen,
        {% if menu_level > 1%}
         'lg:left-full': submenuDirection == 'right', 'lg:right-full': submenuDirection == 'left'
        {% endif %} }"
       data-menu="submenu">
    <ul>
      {% for item in items %}
        <li class="relative"
            x-data="Drupal.behaviors.wingsuitMenu()"
          {% if item.below %}
            @mouseenter="processed = true; submenuDirection=getSubmenuDirection($el);"
            @mouseover="submenuIsOpen = true"
            @mouseleave="processed = false; submenuIsOpen = false"
          {% endif %}
            data-menu-target="submenu"
            data-menu-level="{{ menu_level }}"
          :class="{ 'menu-processed' : processed == true }"
        >
          <div class="{{ link_classes }}" @click="submenuIsOpen = !submenuIsOpen">
            <a href="{{ item.url }}" class="font-display">
              {{ item.title }}
            </a>
            {% if item.below %}
              <div class="{{ ancestors.icon_color }}"
                :class="{'-rotate-90': submenuDirection == 'right', 'rotate-90': submenuDirection == 'left'}
              ">
                {{  pattern('icon', {icon: 'chevron-down', scale: '1' }, 'spritemap' ) }}
              </div>
            {% endif %}
          </div>
          {% if item.below %}
            {{ menus.dropdown_menu(item.below, menu_level + 1, ancestors, ancestors_test) }}
          {% endif %}
        </li>
      {% endfor %}
    </ul>
  </div>
{% endmacro %}

{#
Parent
#}

<ul {{ root_wrapper_attributes }} >
  {% for item in items %}
    <li class="relative"
      {% if item.below %}
        x-data="Drupal.behaviors.wingsuitMenu()"
        data-menu-level="{{ menu_level }}"
        data-menu-target="submenu"
        @mouseover="submenuIsOpen = true"
        @mouseleave="submenuIsOpen = false"
      {% endif %}
    >
      <div {{ root_link_wrapper_attributes }}
        @click="submenuIsOpen = !submenuIsOpen;"
      >
        <a href="{{ item.url }}" {{ root_link_attributes }} >
          {{ item.title }}
        </a>
        {% if item.below is not empty %}
          <div {{ root_icon_color_attributes }}
            :class="{'rotate-180': submenuIsOpen, 'rotate-0': !submenuIsOpen}">
            {{ pattern('icon', {icon: 'chevron-down' }, 'spritemap' ) }}
          </div>
        {% endif %}
      </div>
      {% if item.below %}
        {{ menus.dropdown_menu(item.below, menu_level + 1, ancestors, ancestors_test) }}
      {% endif %}
    </li>
  {% endfor %}
</ul>
